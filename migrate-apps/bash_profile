# Homebrew Bash Completion (conditionally loaded for performance)
if [[ -r "$(brew --prefix)/etc/profile.d/bash_completion.sh" ]]; then
  source "$(brew --prefix)/etc/profile.d/bash_completion.sh"
fi

# Kubernetes CLI Enhancements
if command -v kubectl &>/dev/null; then
  source <(kubectl completion bash)
  alias k=kubectl
  alias kgp='kubectl get pods'  # Common shortcut
  alias kgs='kubectl get svc'  # Services
  alias kctx='kubectl config use-context'
  alias kns='kubectl config set-context --current --namespace'
  complete -o default -F __start_kubectl k
fi

# Silence Bash Deprecation Warning
export BASH_SILENCE_DEPRECATION_WARNING=1

# Command History Enhancements
bind '"\e[A": history-search-backward'  # Search history backward
bind '"\e[B": history-search-forward'  # Search history forward

# Shared history across terminals
shopt -s histappend
export PROMPT_COMMAND="history -a; history -n"

# Increase history size and avoid duplicates
export HISTSIZE=10000  # Number of commands stored in memory
export HISTFILESIZE=20000  # Number of commands stored in the history file
export HISTCONTROL=ignoredups:erasedups  # Avoid duplicate entries
export HISTIGNORE="ls:cd:pwd:exit:clear"  # Ignore trivial commands

# Source fzf key bindings and completions
if [ -f ~/.fzf.bash ]; then
  source ~/.fzf.bash
fi


# FZF Configuration (use 'find' instead of 'ag')
if command -v fzf >/dev/null 2>&1; then
  # Default command for fzf to list all files
  export FZF_DEFAULT_COMMAND='find . -type f'
  
  # Configure key bindings
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"  # Ctrl+T for file search
  export FZF_ALT_C_COMMAND='find . -type d'  # Alt+C for directory search
  
  # Enable Ctrl+R for fuzzy history search
  bind '"\C-r": " \C-e\C-u$(fzf)\e\C-e\er"'
fi

# Colorful CLI tools
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias diff='diff --color=auto'
git config --global color.ui auto
git config --global color.diff auto
git config --global color.status auto
git config --global color.branch auto
export CLICOLOR=1

# Starship Prompt
eval "$(starship init bash)"

# Source .bashrc if it exists
if [ -f ~/.bashrc ]; then
  source ~/.bashrc
fi

